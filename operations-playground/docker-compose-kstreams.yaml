version: '3.9'

services:
  kstreams1:
    image: jawadtahir/kafka-streams-topology
    build:
      context: ../docker/kafka-streams-topology
    hostname: kstreams1
    environment:
      APPID: kafka-streams-count
      KAFKA_BOOTSTRAP: "kafka1:9092"
      PROCESSING_GUARANTEE: "exactly_once_beta"
      STANDBY: 0
    volumes:
#      - ./conf/log4j2-kstreams.xml:/kafka-topology/log4j2.xml
      - kstreams1State:/tmp/kafka-streams
    configs:
      - source: kstreams_log_config
        target: /kafka-topology/log4j2.xml
    networks:
      infra:

    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.labels.vmname==kstreams1"


  kstreams2:
    image: jawadtahir/kafka-streams-topology
    build:
      context: ../docker/kafka-streams-topology
    hostname: kstreams2
    environment:
      APPID: kafka-streams-count
      KAFKA_BOOTSTRAP: "kafka1:9092"
      PROCESSING_GUARANTEE: "exactly_once_beta"
      STANDBY: 0
    volumes:
#      - ./conf/log4j2-kstreams.xml:/kafka-topology/log4j2.xml
      - kstreams2State:/tmp/kafka-streams

    configs:
      - source: kstreams_log_config
        target: /kafka-topology/log4j2.xml
    networks:
      infra:

    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.labels.vmname==kstreams2"

  kstreams3:
    image: jawadtahir/kafka-streams-topology
    build:
      context: ../docker/kafka-streams-topology
    hostname: kstreams3
    environment:
      APPID: kafka-streams-count
      KAFKA_BOOTSTRAP: "kafka1:9092"
      PROCESSING_GUARANTEE: "exactly_once_beta"
      STANDBY: 0
    volumes:
#      - ./conf/log4j2-kstreams.xml:/kafka-topology/log4j2.xml
      - kstreams3State:/tmp/kafka-streams

    configs:
      - source: kstreams_log_config
        target: /kafka-topology/log4j2.xml

    networks:
      infra:

    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.labels.vmname==kstreams3"

  kstreams4:
    image: jawadtahir/kafka-streams-topology
    build:
      context: ../docker/kafka-streams-topology
    hostname: kstreams4
    environment:
      APPID: kafka-streams-count
      KAFKA_BOOTSTRAP: "kafka1:9092"
      PROCESSING_GUARANTEE: "exactly_once_beta"
      STANDBY: 0
    volumes:
#      - ./conf/log4j2-kstreams.xml:/kafka-topology/log4j2.xml
      - kstreams4State:/tmp/kafka-streams

    configs:
      - source: kstreams_log_config
        target: /kafka-topology/log4j2.xml

    networks:
      infra:

    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.labels.vmname==kstreams4"

configs:
  kstreams_log_config:
    file: ./conf/log4j2-kstreams.xml


volumes:
  kstreams1State:
  kstreams2State:
  kstreams3State:
  kstreams4State:


networks:
  infra:
    name: infra
    external: true
